plugins {
    id "com.android.application"
    id "dev.flutter.flutter-gradle-plugin"
    id "org.jetbrains.kotlin.android"
    id "com.google.gms.google-services"
    id "com.google.firebase.crashlytics"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '2'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0.1'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 34

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    lintOptions {
        checkReleaseBuilds false
    }

    defaultConfig {
        applicationId "com.masjidhiseb.khata"
        minSdkVersion 21
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
        versionCode 75
        versionName "2.3.3"
    }

//    signingConfigs {
//        if (System.getenv("ANDROID_KEYSTORE_PATH")) {
//            release {
//                storeFile file(System.getenv("ANDROID_KEYSTORE_PATH"))
//                keyAlias System.getenv("ANDROID_KEYSTORE_ALIAS")
//                keyPassword System.getenv("ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD")
//                storePassword System.getenv("ANDROID_KEYSTORE_PASSWORD")
//            }
//        } else {
//            release {
//                keyAlias keystoreProperties['keyAlias']
//                keyPassword keystoreProperties['keyPassword']
//                storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
//                storePassword keystoreProperties['storePassword']
//            }
//        }
//    }


    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

        buildTypes {
            release {
                // TODO: Add your own signing config for the release build.
                // Signing with the debug keys for now, so `flutter run --release` works.
                crunchPngs false
                signingConfig signingConfigs.release
                minifyEnabled false
                shrinkResources false
            }
        }


    }

    flutter {
        source '../..'
    }

    dependencies {
        def work_version = "2.8.1"
        constraints {
            implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0") {
                because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
            }
            implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0") {
                because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
            }
        }
        implementation platform('com.google.firebase:firebase-bom:32.2.3')
        implementation "androidx.browser:browser:1.4.0"
        implementation 'com.google.firebase:firebase-analytics'
        coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
        implementation("androidx.multidex:multidex:2.0.1")
        implementation 'androidx.window:window:1.1.0'
        implementation 'androidx.window:window-java:1.1.0'

        // (Java only)
        implementation "androidx.work:work-runtime:$work_version"
        // Kotlin + coroutines
        implementation "androidx.work:work-runtime-ktx:$work_version"
    }


